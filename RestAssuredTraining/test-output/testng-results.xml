<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="4900" started-at="2020-12-30T09:26:47Z" finished-at="2020-12-30T09:26:52Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="4900" started-at="2020-12-30T09:26:47Z" finished-at="2020-12-30T09:26:52Z">
      <class name="RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures">
        <test-method status="PASS" signature="testAndFeatureForReadablity()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testAndFeatureForReadablity" duration-ms="2985" started-at="2020-12-30T09:26:47Z" finished-at="2020-12-30T09:26:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndFeatureForReadablity -->
        <test-method status="PASS" signature="testEqualToFunction()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testEqualToFunction" duration-ms="359" started-at="2020-12-30T09:26:50Z" finished-at="2020-12-30T09:26:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualToFunction -->
        <test-method status="PASS" signature="testLogging()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testLogging" duration-ms="346" started-at="2020-12-30T09:26:50Z" finished-at="2020-12-30T09:26:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogging -->
        <test-method status="PASS" signature="testParametersAndHeaders()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testParametersAndHeaders" duration-ms="309" started-at="2020-12-30T09:26:51Z" finished-at="2020-12-30T09:26:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParametersAndHeaders -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testStatusCode" duration-ms="359" started-at="2020-12-30T09:26:51Z" finished-at="2020-12-30T09:26:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
        <test-method status="FAIL" signature="testUsingXpath1()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testUsingXpath1" duration-ms="290" started-at="2020-12-30T09:26:51Z" finished-at="2020-12-30T09:26:52Z">
          <exception class="org.xml.sax.SAXParseException">
            <message>
              <![CDATA[Content is not allowed in prolog.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
at javax.xml.parsers.DocumentBuilder$parse.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:67)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at io.restassured.assertion.BodyMatcherGroup$_validate_closure2.doCall(BodyMatcherGroup.groovy:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
at groovy.lang.Closure.call(Closure.java:412)
at groovy.lang.Closure.call(Closure.java:428)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3562)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3547)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3647)
at org.codehaus.groovy.runtime.dgm$101.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:247)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:480)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1267)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures.testUsingXpath1(Test1_BasicFeatures.java:107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.xml.sax.SAXParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsingXpath1 -->
        <test-method status="PASS" signature="testhasItemsFunction()[pri:0, instance:RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures@5622fdf]" name="testhasItemsFunction" duration-ms="217" started-at="2020-12-30T09:26:52Z" finished-at="2020-12-30T09:26:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testhasItemsFunction -->
      </class> <!-- RestAssuredTraining.AdvanceScenarios.Test1_BasicFeatures -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
